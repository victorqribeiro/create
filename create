#!/bin/bash

[[ $1 ]] || { echo "Usage: $0 <project_name>"; exit; }

dir="$1";
date=$(date -I);

if [ ! -d $dir ];
	then
	mkdir -p $dir/{js,css};
	touch $dir/js/main.js;
	cat > "$dir/sw.js" << EOF
const filesToCache = [
    	'./',
      './index.html',
      './js/main.js',
      './css/main.css',
      './favicon.png',
      './manifest.json'
 ];

const staticCacheName = '$dir-v1';

self.addEventListener('install', event => {
  event.waitUntil(
    caches.open(staticCacheName)
    .then(cache => {
      return cache.addAll(filesToCache);
    })
  );
});

self.addEventListener('fetch', event => {
  event.respondWith(
    caches.match(event.request)
    .then(response => {
      if (response) {
        return response;
      }

      return fetch(event.request)

			.then(response => {
				return caches.open(staticCacheName).then(cache => {
					cache.put(event.request.url, response.clone());
					return response;
				});
			});

    }).catch(error => {})
  );
});

self.addEventListener('activate', event => {

  const cacheWhitelist = [staticCacheName];

  event.waitUntil(
    caches.keys().then(cacheNames => {
      return Promise.all(
        cacheNames.map(cacheName => {
          if (cacheWhitelist.indexOf(cacheName) === -1) {
            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});
EOF
	cat > "$dir/js/aux.js" << EOF
if('serviceWorker' in navigator) {
  navigator.serviceWorker
           .register('/$dir/sw.js', {scope: './'})
           .then(response => response)
           .catch(reason => reason);
}

let deferredPrompt;
const addBtn = document.createElement('button');

window.addEventListener('beforeinstallprompt', (e) => {
  e.preventDefault();
  deferredPrompt = e;
  addBtn.style.display = 'block';
  addBtn.addEventListener('click', (e) => {
    addBtn.style.display = 'none';
    deferredPrompt.prompt();
    deferredPrompt.userChoice.then((choiceResult) => {
        deferredPrompt = null;
      });
  });
});
EOF
	cat > "$dir/css/main.css" << EOF
html, body{
  margin: 0;
  padding: 0;
}
canvas{
  display: block;
}
EOF
	cat > "$dir/index.html" << EOF
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="theme-color" content="#FFF"/>
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no">
	<meta name="mobile-web-app-capable" content="yes">
	<meta property="og:url" content=" " />
	<meta property="og:type" content=" " />
	<meta property="og:title" content=" " />
	<meta property="og:author" content=" " />
	<meta property="og:description" content=" " />
	<meta property="og:image" content=" " />
	<title> $dir </title>
	<link rel="manifest" href="manifest.json" />
	<link rel="stylesheet" href="css/main.css" />
	<link rel="icon" href="favicon.png" sizes="256x256"/>
	<link rel="apple-touch-icon" href="favicon.png" />
</head>
<body>
	<script src="js/aux.js"></script>
	<script src="js/main.js"></script>
</body>
</html>
EOF
	cat > "$dir/manifest.json" << EOF
{
  "name": " ",
  "short_name": " ",
  "description": " ",
  "start_url": "index.html",
  "display": "standalone",
  "orientation": "portrait",
  "background_color": "#FFF",
  "theme_color": "#FFF",
  "icons": [
    {
      "src": "favicon.png",
      "sizes": "256x256",
      "type": "image/png",
      "density": 1
    },
    {
      "src": "favicon.png",
      "sizes": "512x512",
      "type": "image/png",
      "density": 1
    }
  ]
}
EOF
	echo "iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAQAAAD2e2DtAAABu0lEQVR42u3SQREAAAzCsOHf9F6oIJXQS07Tx\
QIABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACA\
ABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAA\
IAAEgAASAABAAAgAACwAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAA\
BIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABI\
AAEgAAQAAJAAAgAASAABIAAEAACQAAIAAAsAEAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAAB\
AAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIA\
AEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAKg9kK0BATSHu+YAAAAASUVORK5CYII=" | base64 -d > "$dir/favicon.png";
	echo "Created $dir";
fi
